plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // See https://docs.gradle.org/8.3/userguide/upgrading_version_8.html#test_framework_implementation_dependencies

    implementation 'org.springframework.data:spring-data-jdbc'
    implementation 'com.h2database:h2'
}

tasks.named('test') {
    useJUnitPlatform()
}

// This section causes useful test output to go to the terminal.
test {
    testLogging {
        events "passed", "skipped", "failed" //, "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        // Change to `true` for more verbose test output
        showStandardStreams = false
    }
}

// Add this section to generate the bin folder for both main and test compiled classes
tasks.withType(JavaCompile) {
    // Set custom directory for compiled classes
    destinationDirectory = file("$buildDir/bin/${it.name.contains('Test') ? 'test' : 'main'}")
}

task copyMainClasses(type: Copy) {
    from compileJava.destinationDirectory
    into "$buildDir/bin/main"
}

task copyTestClasses(type: Copy) {
    from compileTestJava.destinationDirectory
    into "$buildDir/bin/test"
}

compileJava.finalizedBy(copyMainClasses)
compileTestJava.finalizedBy(copyTestClasses)
